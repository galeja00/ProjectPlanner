// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  email     String      @unique
  emailVerified DateTime?
  name      String
  surname   String
  password  String
  image     String?
  projects  ProjectMember[]
  teams     TeamMember[]

}

enum ProjectType {
  Kanban
  Scrum
}



model Project {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  name      String
  category  String
  icon      String?
  color     String
  done      Boolean     @default(false)
  type      ProjectType
  members   ProjectMember[]
  teams     Team[]
  
  kanban    Kanban?
  scrum     Scrum?
}

model Kanban {
  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String    @id
}

model Scrum {
  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String    @id
}

model ProjectMember {
  userId    String  
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId String  
  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  //position  String?
  creator   Boolean   @default(false)
  teamId    String?

   @@unique([userId, projectId], name: "Unique_User_Project")
}


model TeamMember {
  userId  String  
  user    User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  teamId  String  
  team    Team        @relation(fields: [teamId], references: [id], onDelete: Cascade)
  creator   Boolean   @default(false)
  //position  String?

  @@unique([userId, teamId], name: "Unique_User_Team")
}

model Team {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  name      String
  icon      String?
  members   TeamMember[]
  project   Project[]
}
