//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  email String [unique, not null]
  name String [not null]
  surname String [not null]
  password String [not null]
  image String
  projects ProjectMember [not null]
  projectInvites ProjectInvite [not null]
  nodes Node [not null]
}

Table Node {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  name String [not null]
  text String [not null]
  userId String [not null]
  user User [not null]
  taskId String
  task Task
}

Table Project {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  name String [not null]
  category String
  icon String
  color String [not null]
  done Boolean [not null, default: false]
  doneAt DateTime
  members ProjectMember [not null]
  teams Team [not null]
  invites ProjectInvite [not null]
  kanban Kanban
}

Table ProjectMember {
  id String [pk]
  userId String [not null]
  user User [not null]
  projectId String [not null]
  project Project [not null]
  teamId String
  team Team
  creator Boolean [not null, default: false]
  tasks TaskSolver [not null]

  indexes {
    (userId, projectId) [unique]
  }
}

Table ProjectInvite {
  id String [pk]
  invitedUserId String [not null]
  invitedUser User [not null]
  projectId String [not null]
  project Project [not null]
  createAt DateTime [default: `now()`, not null]
  displayed Boolean [not null, default: false]

  indexes {
    (invitedUserId, projectId) [unique]
  }
}

Table Kanban {
  projectId String [pk]
  project Project [not null]
  boardId String
  board Board
  timetableId String
  timetable TimeTable
  backlogId String
  backlog Backlog
  tasks Task [not null]
}

Table Board {
  id String [pk]
  projectId String [unique, not null]
  Kanban Kanban [not null]
  taskColumns TaskColumn [not null]
}

Table Backlog {
  id String [pk]
  projectId String [unique, not null]
  kanban Kanban [not null]
  tasksGroups TasksGroup [not null]
}

Table TimeTable {
  id String [pk]
  projectId String [unique, not null]
  kanban Kanban [not null]
  tasksGroups TasksGroup [not null]
}

Table TaskColumn {
  id String [pk]
  board Board [not null]
  boardId String [not null]
  name String [not null]
  tasks Task [not null]
  position Int [not null]

  indexes {
    (boardId, name) [unique]
  }
}

Table Task {
  id String [pk]
  projectId String [not null]
  kanban Kanban [not null]
  createAt DateTime [default: `now()`, not null]
  name String [not null]
  type String [not null]
  colIndex Int
  priority Ranking
  teamId String
  team Team
  estimatedHours Int
  complexity Ranking
  description String
  nodes Node [not null]
  taskSolvers TaskSolver [not null]
  tasksGroupId String
  tasksGroup TasksGroup
  status Boolean [not null, default: false]
  taskColumnId String
  taskColumn TaskColumn
}

Table TaskSolver {
  id String [pk]
  memberId String [not null]
  member ProjectMember [not null]
  taskId String [not null]
  task Task [not null]

  indexes {
    (taskId, memberId) [unique]
  }
}

Table TasksGroup {
  id String [pk]
  backlogId String [not null]
  backlog Backlog [not null]
  timeTableId String
  timeTable TimeTable
  name String [not null]
  tasks Task [not null]
  createAt DateTime [default: `now()`, not null]
  position Int [not null]
  startAt DateTime
  deadlineAt DateTime

  indexes {
    (backlogId, name) [unique]
  }
}

Table Team {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  name String [not null]
  color String
  projectId String [not null]
  project Project [not null]
  members ProjectMember [not null]
  tasks Task [not null]
}

Enum Ranking {
  low
  medium
  high
}

Ref: Node.userId > User.id [delete: Cascade]

Ref: Node.taskId > Task.id [delete: Cascade]

Ref: ProjectMember.userId > User.id [delete: Cascade]

Ref: ProjectMember.projectId > Project.id [delete: Cascade]

Ref: ProjectMember.teamId > Team.id

Ref: ProjectInvite.invitedUserId > User.id [delete: Cascade]

Ref: ProjectInvite.projectId > Project.id [delete: Cascade]

Ref: Kanban.projectId - Project.id [delete: Cascade]

Ref: Board.projectId - Kanban.projectId [delete: Cascade]

Ref: Backlog.projectId - Kanban.projectId [delete: Cascade]

Ref: TimeTable.projectId - Kanban.projectId [delete: Cascade]

Ref: TaskColumn.boardId > Board.id [delete: Cascade]

Ref: Task.projectId > Kanban.projectId [delete: Cascade]

Ref: Task.teamId > Team.id

Ref: Task.tasksGroupId > TasksGroup.id

Ref: Task.taskColumnId > TaskColumn.id [delete: Cascade]

Ref: TaskSolver.memberId > ProjectMember.id [delete: Cascade]

Ref: TaskSolver.taskId > Task.id [delete: Cascade]

Ref: TasksGroup.backlogId > Backlog.id [delete: Cascade]

Ref: TasksGroup.timeTableId > TimeTable.id

Ref: Team.projectId > Project.id [delete: Cascade]